#!/bin/bash
#
# Zentube
#
# A simple GUI front-end to youtube-dl. All you need to do is run it,
# and put in the address of the video, and the back-end tries to 
# download the video.
#
# Parameters:
# 	None
# 
# Requires:
# 	youtube-dl
# 	zenity
# 	gksudo & apt (if you want youtube-dl installed automatically)
#
# Author:
# 	Konrad Siek <konrad.siek@gmail.com>
#
# License:
#
# Copyright 2008 Konrad Siek.
# 
# This program is free software: you can redistribute it and/
# or modify it under the terms of the GNU General Public 
# License as published by the Free Software Foundation, either 
# version 3 of the License, or (at your option) any later 
# version.
# 
# This program is distributed in the hope that it will be 
# useful, but WITHOUT ANY WARRANTY; without even the implied 
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
# PURPOSE. See the GNU General Public License for more 
# details.
# 
# You should have received a copy of the GNU General Public 
# License along with this program. If not, see 
# <http://www.gnu.org/licenses/>. 

# The downloader backend.
PACKAGE=youtube-dl

# Output information.
OUTPUT_DIR=~/Videos/
EXTENSION=.flv
TEMP_FILE=/tmp/$(basename $0).XXXXXXXXXX

# The quality of the output file can be adjusted here, or you can comment 
# out this setting altogether, to get the default.
QUALITY=--best-quality 

# Exit code constants.
SUCCESS=0
INSTALLATION_ABORTED=1
INSTALLATION_FAILED=2
INVALID_VIDEO_ADDRESS=4
INVALID_OUTPUT_DIRECTORY=8
BACKEND_ERROR=16

# This is a convenience installer for apt-using distros, e.g. Ubuntu.
if [ -z "$(which $PACKAGE)" ]
then
	# Ask whether to attempt automatic install of the missing package.
	# If the answer is no, then quit with an error.
	zenity --question \
		--title="Automatic installation" \
		--text="Can't find <b>$PACKAGE</b>. Should I try installing it?" \
	|| exit $INSTALLATION_ABORTED
	
	# Try installing the missing package, or quit with an error if the
	# attempt is failed.
	gksudo "apt-get install $PACKAGE" || exit $INSTALLATION_FAILED
fi

# Ask user for the URL of the video.
url=$(\
	zenity --entry \
	--title="Video address" \
	--text="What is the address of the video?" \
)
# If no URL is given, then quit.
[ -z "$url" ] && exit $INVALID_VIDEO_ADDRESS

# Move to the output directory, create it i necessary.
mkdir -p "$OUTPUT_DIR" || exit $INVALID_OUTPUT_DIRECTORY
cd "$OUTPUT_DIR"

# Make a temporary file to collect error messages from the downloader.
temp_file=$(mktemp $TEMP_FILE)

# Run the downloader.
$PACKAGE $QUALITY --title "$url" 2>"$temp_file" | \
	zenity --progress --pulsate --auto-kill --auto-close --text="Downloading..."

# Check for errors, and display a success of error dialog at the end.
errors=$(cat $temp_file)

if [ -z "$errors" ] 
then
	# Display successful info.
	zenity --info --text="Download successful!"
	
	# Remove temporary file.
	unlink "$temp_file"
	
	# Exit successfully.
	exit $SUCCESS
else
	# Display error dialog.
	zenity --error --text="$errors"
	
	# Remove temporary file.
	unlink "$temp_file"
	
	# Exit with an error code.
	exit $BACKEND_ERROR
fi
